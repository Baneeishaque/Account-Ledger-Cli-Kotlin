# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

pool:
  vmImage: 'windows-latest'

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle
  repositoryName: Account-Ledger-Cli-Kotlin-Gradle
  # Secret Variables
  # MAPPED_FTP_HOST: $(FTP_HOST)
  # MAPPED_FTP_USER: $(FTP_USER)
  # MAPPED_FTP_PWD: $(FTP_PWD)

steps:
  - task: Cache@2.198.0
    inputs:
      key: 'gradle | "$(Agent.OS)"'
      restoreKeys: gradle
      path: $(GRADLE_USER_HOME)
    displayName: Gradle Build Cache

  - task: Gradle@3.208.0
    displayName: 'Gradle Build : Tar Distribution'
    inputs:
      gradleOptions: '-Xmx3072m'
      tasks: distTar

  - script: 'gradlew --stop'
    displayName: Stop Gradle Daemon

  # # Upload Executable Tar File
  # - task: FtpUpload@2
    # displayName: 'FTP Upload $(repositoryName) Tar File'
    # inputs:
      # credentialsOption: inputs
      # serverUrl: 'ftp://$(MAPPED_FTP_HOST)'
      # username: $(MAPPED_FTP_USER)
      # password: $(MAPPED_FTP_PWD)
      # # TODO : Add option for file instead of directory
      # rootDirectory: '.'
      # remoteDirectory: '/public_html/files/$(repositoryName)/$(Build.SourceVersion)'
      # filePatterns: 'cli-app/build/distributions/cli-app.tar'

  # TODO : If branch is not master : Extract folder, rename cli-app & cli-app.bat to Account-Ledger-CLI-$(Build.SourceName).bat, then repack as Account-Ledger-CLI-$(Build.SourceName).tar (Inner folders too); Otherwise Extract folder, rename cli-app & cli-app.bat to Account-Ledger-CLI.bat, then repack as Account-Ledger-CLI.tar (Inner folders too).

  - script: | 
      cd cli-app/build/distributions
      tar -xzvf cli-app.tar
      echo -----------------------------------------------------
      ls
      mv cli-app Account-Ledger-Cli
      echo -----------------------------------------------------
      ls
      cd Account-Ledger-Cli/bin
      echo -----------------------------------------------------
      ls
      mv cli-app Account-Ledger-Cli
      chmod a+x Account-Ledger-Cli
      mv cli-app.bat Account-Ledger-Cli.bat
      echo -----------------------------------------------------
      ls
      pwd
      cd ../..
      echo -----------------------------------------------------
      pwd
      ls
      tar -czvf Account-Ledger-Cli.tar.gz Account-Ledger-Cli
      echo -----------------------------------------------------
      ls
      tar -ztvf Account-Ledger-Cli.tar.gz
    displayName: Rebuilding Tar Distribution

  - publish: cli-app/build/distributions/Account-Ledger-Cli.tar.gz
    artifact: Account-Ledger-CLI
